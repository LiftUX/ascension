workflows:
  version: 2.1
  main:
    jobs:
      # Support PHP Versions
      # http://php.net/supported-versions.php
      - php56-phpcs: # EOL December 31, 2018, latest PHP version supported by Mins
          filters:
            tags:
              only: /^(?!canary).*$/
      - php73-phpcs: # Will be deprecated on 30 Nov 2020
          filters:
            tags:
              only: /^(?!canary).*$/
      - theme-check:
          filters:
            tags:
              only: /^(?!canary).*$/
      - canary:
          requires:
            - php56-phpcs
            - php73-phpcs
            - theme-check
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - php56-phpcs
            - php73-phpcs
            - theme-check
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*)?(\+[0-9-]+(\.[0-9]+)*)?/ # Run on semantic version tags only
            branches:
              ignore: /.*/

version: 2.1
jobs:
  php56-phpcs:
    docker:
      - image: circleci/php:5.6
    steps:
      - checkout
      - run:
          name: "Setup Environment Variables"
          command: |
            echo "export PATH=$HOME/.composer/vendor/bin:$PATH" >> $BASH_ENV
            source /home/circleci/.bashrc
      - run:
          name: "Install Dependencies"
          command: composer install
      - run:
          name: "Run PHPCS"
          command: composer lint

  php73-phpcs:
    docker:
      - image: circleci/php:7.3.8
    steps:
      - checkout
      - run:
          name: "Setup Environment Variables"
          command: |
            echo "export PATH=$HOME/.composer/vendor/bin:$PATH" >> $BASH_ENV
            source /home/circleci/.bashrc
      - run:
          name: "Install Dependencies"
          command: composer install
      - run:
          name: "Run PHPCS"
          command: composer lint

  theme-check:
    docker:
      - image: circleci/php:7.3.8-apache-node-browsers
      - image: circleci/mysql:5.7
    steps:
      - checkout
      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Swap node versions
          command: |
            set +e
            wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm install v12
            nvm use 12
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run:
          name: Update npm
          command: sudo npm install -g npm@latest
      - run:
          name: Install MariaDB
          command: |
            sudo apt-get update --allow-releaseinfo-change
            sudo apt-get install mariadb-client
      - run:
          name: Install rsync
          command: sudo apt install rsync
      - run:
          name: Install Grunt.js
          command: sudo npm install -g grunt-cli
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install node packages
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Install WPCLI
          command: |
            curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
            chmod +x wp-cli.phar
            sudo mv wp-cli.phar /usr/local/bin/wp
      - run:
          name: Build the Mins Theme
          command: |
            mkdir -p ascension
            mkdir -p /tmp/artifacts
            rsync -av --exclude-from ~/project/.distignore --delete ~/project/. ./ascension
      - run:
          name: Setup WordPress site and install the Theme Check package
          command: bash .dev/install-wp-tests.sh wordpress_test root '' 127.0.0.1 latest
      - run:
          name: Run theme check
          command: wp themecheck --theme=ascension --no-interactive --path=/tmp/wordpress

  canary:
    docker:
      - image: circleci/golang:latest-node-browsers-legacy
    steps:
      - checkout
      - run:
          name: Update npm
          command: sudo npm install -g npm@latest
      - run:
          name: Install Grunt.js
          command: sudo npm install -g grunt-cli
      - run:
          name: Install PHP
          command: sudo apt-get install php libapache2-mod-php php-mbstring
      - run:
          name: Install WPCLI
          command: |
            curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
            chmod +x wp-cli.phar
            sudo mv wp-cli.phar /usr/local/bin/wp
      - run:
          name: Install ghr
          command: |
            go get -u github.com/tcnksm/ghr
      - run:
          name: Install rsync
          command: sudo apt install rsync
      - run:
          name: Build the Mins Theme
          command: |
            mkdir -p ascension
            mkdir -p /tmp/artifacts
            rsync -av --exclude-from ~/project/.distignore --delete ~/project/. ./ascension
            zip -r /tmp/artifacts/ascension-canary.zip ./ascension
      - deploy:
          name: Create a canary release on GitHub
          command: ghr -t ${GH_ACCESS_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -n "canary" -b "Latest build of the master branch. This bleeding edge version is for testing purposes only and should not be used in production." -delete -prerelease -replace canary /tmp/artifacts/ascension-canary.zip

  deploy:
    docker:
      - image: circleci/golang:latest-node-browsers-legacy
    steps:
      - checkout
      - run:
          name: Update npm
          command: sudo npm install -g npm@latest
      - run:
          name: Install Grunt.js
          command: sudo npm install -g grunt-cli
      - run:
          name: Install PHP
          command: sudo apt-get install php libapache2-mod-php php-mbstring
      - run:
          name: Install gettext
          command: sudo apt-get install gettext
      - run:
          name: Install WPCLI
          command: |
            curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
            chmod +x wp-cli.phar
            sudo mv wp-cli.phar /usr/local/bin/wp
      - run:
          name: Install ghr
          command: |
            go get -u github.com/tcnksm/ghr
      - run:
          name: Install rsync
          command: sudo apt install rsync
      - run:
          name: Install node packages
          command: npm install
      - run:
          name: Build the Mins Theme
          command: |
            npm run build
            mkdir -p ascension
            mkdir -p /tmp/artifacts
            rsync -av --exclude-from ~/project/.distignore --delete ~/project/. ./ascension
            zip -r /tmp/artifacts/ascension.zip ./ascension
      - deploy:
          name: Deploy a new release to GitHub
          command: |
            CHANGELOG=$(sed -n -e '/== Changelog ==/,$p' $HOME/project/readme.txt | tail -n +3)
            ghr -t ${GH_ACCESS_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "${CHANGELOG}" -delete ${CIRCLE_TAG} /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts
